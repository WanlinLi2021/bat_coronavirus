
RAxML-NG v. 0.9.0 released on 20.05.2019 by The Exelixis Lab.
Developed by: Alexey M. Kozlov and Alexandros Stamatakis.
Contributors: Diego Darriba, Tomas Flouri, Benoit Morel, Sarah Lutteropp, Ben Bettisworth.
Latest version: https://github.com/amkozlov/raxml-ng
Questions/problems/suggestions? Please visit: https://groups.google.com/forum/#!forum/raxml

RAxML-NG was called at 14-Jul-2023 23:59:16 as follows:

raxml-ng --all --model Blosum62+G --msa results/windows/window_position_1460_1560.fa --prefix results/RaxMl/1460_1560 --msa-format FASTA --tree pars{5} --seed 239 --threads 2 --force --bs-trees 100 --bs-metric fbp

Analysis options:
  run mode: ML tree search + bootstrapping (Felsenstein Bootstrap)
  start tree(s): parsimony (5)
  bootstrap replicates: 100
  random seed: 239
  tip-inner: OFF
  pattern compression: ON
  per-rate scalers: OFF
  site repeats: ON
  branch lengths: proportional (ML estimate, algorithm: NR-FAST)
  SIMD kernels: SSE3
  parallelization: PTHREADS (2 threads), thread pinning: OFF

WARNING: Running in FORCE mode: all safety checks are disabled!

[00:00:00] Reading alignment from file: results/windows/window_position_1460_1560.fa
[00:00:00] Loaded alignment with 47 taxa and 100 sites

Alignment comprises 1 partitions and 93 patterns

Partition 0: noname
Model: BLOSUM62+G4m
Alignment sites / patterns: 100 / 93
Gaps: 0.00 %
Invariant sites: 19.00 %


NOTE: Binary MSA file created: results/RaxMl/1460_1560.raxml.rba

[00:00:00] Generating 5 parsimony starting tree(s) with 47 taxa
[00:00:00] Data distribution: max. partitions/sites/weight per thread: 1 / 47 / 3760

Starting ML tree search with 5 distinct starting trees

[00:01:00] ML tree search #1, logLikelihood: -1051.333734
[00:01:50] ML tree search #2, logLikelihood: -1051.333763
[00:02:49] ML tree search #3, logLikelihood: -1051.333945
[00:04:40] ML tree search #4, logLikelihood: -1051.341899
[00:05:50] ML tree search #5, logLikelihood: -1051.335499

[00:05:50] ML tree search completed, best tree logLH: -1051.333734

[00:05:50] Starting bootstrapping analysis with 100 replicates.

[00:07:30] Bootstrap tree #1, logLikelihood: -998.464833
[00:08:30] Bootstrap tree #2, logLikelihood: -1129.825250
[00:09:40] Bootstrap tree #3, logLikelihood: -1024.602816
[00:10:33] Bootstrap tree #4, logLikelihood: -1064.644455
[00:11:41] Bootstrap tree #5, logLikelihood: -1075.246471
[00:12:54] Bootstrap tree #6, logLikelihood: -1036.854468
[00:13:56] Bootstrap tree #7, logLikelihood: -959.866628
[00:15:00] Bootstrap tree #8, logLikelihood: -1046.468543
[00:16:09] Bootstrap tree #9, logLikelihood: -970.140448
[00:17:18] Bootstrap tree #10, logLikelihood: -1035.643434
[00:18:37] Bootstrap tree #11, logLikelihood: -1000.106221
[00:20:01] Bootstrap tree #12, logLikelihood: -1084.477282
[00:20:56] Bootstrap tree #13, logLikelihood: -1088.700044
[00:22:00] Bootstrap tree #14, logLikelihood: -974.939557
[00:23:51] Bootstrap tree #15, logLikelihood: -1090.155139
[00:24:51] Bootstrap tree #16, logLikelihood: -1030.036585
[00:25:46] Bootstrap tree #17, logLikelihood: -1066.442593
[00:26:52] Bootstrap tree #18, logLikelihood: -942.725154
[00:27:51] Bootstrap tree #19, logLikelihood: -1018.476012
[00:28:42] Bootstrap tree #20, logLikelihood: -1093.262165
