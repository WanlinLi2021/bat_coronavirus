
RAxML-NG v. 0.9.0 released on 20.05.2019 by The Exelixis Lab.
Developed by: Alexey M. Kozlov and Alexandros Stamatakis.
Contributors: Diego Darriba, Tomas Flouri, Benoit Morel, Sarah Lutteropp, Ben Bettisworth.
Latest version: https://github.com/amkozlov/raxml-ng
Questions/problems/suggestions? Please visit: https://groups.google.com/forum/#!forum/raxml

RAxML-NG was called at 13-Jul-2023 09:48:17 as follows:

raxml-ng --all --model Blosum62+G --msa results/windows/window_position_990_1090.fa --prefix results/RaxMl/990_1090 --msa-format FASTA --tree pars{5} --seed 239 --threads 2 --force --bs-trees 100 --bs-metric fbp

Analysis options:
  run mode: ML tree search + bootstrapping (Felsenstein Bootstrap)
  start tree(s): parsimony (5)
  bootstrap replicates: 100
  random seed: 239
  tip-inner: OFF
  pattern compression: ON
  per-rate scalers: OFF
  site repeats: ON
  branch lengths: proportional (ML estimate, algorithm: NR-FAST)
  SIMD kernels: SSE3
  parallelization: PTHREADS (2 threads), thread pinning: OFF

WARNING: Running in FORCE mode: all safety checks are disabled!

[00:00:00] Reading alignment from file: results/windows/window_position_990_1090.fa
[00:00:00] Loaded alignment with 47 taxa and 100 sites

Alignment comprises 1 partitions and 97 patterns

Partition 0: noname
Model: BLOSUM62+G4m
Alignment sites / patterns: 100 / 97
Gaps: 0.00 %
Invariant sites: 9.00 %


NOTE: Binary MSA file created: results/RaxMl/990_1090.raxml.rba

[00:00:00] Generating 5 parsimony starting tree(s) with 47 taxa
[00:00:00] Data distribution: max. partitions/sites/weight per thread: 1 / 49 / 3920

Starting ML tree search with 5 distinct starting trees

[00:01:36] ML tree search #1, logLikelihood: -1091.583505
[00:04:36] ML tree search #2, logLikelihood: -1091.597144
[00:06:23] ML tree search #3, logLikelihood: -1091.590002
[00:07:47] ML tree search #4, logLikelihood: -1092.302400
[00:09:17] ML tree search #5, logLikelihood: -1091.585914

[00:09:17] ML tree search completed, best tree logLH: -1091.583505

[00:09:17] Starting bootstrapping analysis with 100 replicates.

[00:10:17] Bootstrap tree #1, logLikelihood: -1060.657705
[00:11:22] Bootstrap tree #2, logLikelihood: -1027.242093
[00:12:21] Bootstrap tree #3, logLikelihood: -1116.716646
[00:13:15] Bootstrap tree #4, logLikelihood: -1143.790328
[00:14:06] Bootstrap tree #5, logLikelihood: -1194.094552
[00:15:08] Bootstrap tree #6, logLikelihood: -1077.115872
[00:16:10] Bootstrap tree #7, logLikelihood: -1021.117763
[00:17:04] Bootstrap tree #8, logLikelihood: -1148.455454
[00:18:11] Bootstrap tree #9, logLikelihood: -1008.475137
[00:19:06] Bootstrap tree #10, logLikelihood: -1056.522271
[00:20:02] Bootstrap tree #11, logLikelihood: -1072.027698
[00:21:12] Bootstrap tree #12, logLikelihood: -1022.086789
[00:22:16] Bootstrap tree #13, logLikelihood: -1065.914554
[00:23:17] Bootstrap tree #14, logLikelihood: -1070.408813
[00:24:18] Bootstrap tree #15, logLikelihood: -1078.421181
[00:25:16] Bootstrap tree #16, logLikelihood: -1049.224071
[00:26:22] Bootstrap tree #17, logLikelihood: -1014.842860
[00:27:23] Bootstrap tree #18, logLikelihood: -1078.959835
[00:28:28] Bootstrap tree #19, logLikelihood: -1077.452478
[00:29:38] Bootstrap tree #20, logLikelihood: -1147.798964
[00:30:54] Bootstrap tree #21, logLikelihood: -1100.593461
[00:31:47] Bootstrap tree #22, logLikelihood: -1101.391733
